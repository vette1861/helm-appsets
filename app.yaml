# This applicationset will create an application for every chart in charts/* with values in values/*
# Each chart can set defaults to apply to all env clusters
# Each chart can set overrides to apply to specific env clusters
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: helm-poc-appset
  namespace: argocd
  annotations:
    argocd.argoproj.io/manifest-generate-paths: .. # Ensures charts path and values path is available for templating
spec:
  goTemplate: true
  generators:
    - merge:
        mergeKeys:
          - env
          - app
          - nameName
          - chartName
        generators:
          - matrix:
              generators:
                - git:
                    repoURL: https://github.com/vette1861/helm-appsets.git
                    revision: HEAD
                    files:
                    - path: "charts/**/defaults.yaml"
                - list:
                    elements:
                    - envName: '{{ .env }}'
                      appName: '{{ .app }}'
                      chartNameName: '{{ .chartName }}'
                      nameName: 'minikube-dev'
                      serverName: 'https://kubernetes.default.svc'
                      chartVersionName: '{{ .chartVersion }}'
          - matrix:
              generators:
                - git:
                    repoURL: https://github.com/vette1861/helm-appsets.git
                    revision: HEAD
                    files:
                    - path: "charts/**/overrides.yaml"
                - list:
                    elements:
                    - envName: '{{ .env }}'
                      appName: '{{ .app }}'
                      chartNameName: '{{ .chartName }}'
                      nameName: 'minikube-dev'
                      serverName: 'https://kubernetes.default.svc'
                      chartVersionName: '{{ .chartVersion }}'
                # '{{ range $index, $env := .envList }}{{if ne $index 0}}{{print "\n"}}{{end}}{{print "- " .}}{{end}}'
                  # values: ["",'{{ range $index, $env := .envList }}{{if ne $index 0}},{{end}}{{print .}}{{end}}']
                  # - sandbox
                  # - staging
                  # - prod
                  # \"sandbox,staging,prod\"
                  # values: ['{{ range $index, $env := .envList }}{{if ne $index 0}},{{end}}{{print .}}{{end}}']
                # envCheck: '[{{ range $index, $env := .envList }}{{if ne $index 0}},{{end}}"{{print .}}"{{end}}]'
        # matchLabels:
        #   envList.name: 'dev'
                # specialEnv: '{{ range $index, $env := .envList }}{{.name}}{{end}}'
                  # - '{{ range $index, $env := .envList }}{{if eq $index 0}}{{.name}}{{end}}{{end}}'
                  # - '{{ range $index, $env := .envList }}{{if eq $index 1}}{{.name}}{{end}}{{end}}'
                  # - '{{ range $index, $env := .envList }}{{if eq $index 2}}{{.name}}{{end}}{{end}}'
                  # - '{{ range $index, $env := .envList }}{{if eq $index 3}}{{.name}}{{end}}{{end}}'
                  # values: ['{{range $index, $env := .envList}}{{if ne $index 0}},{{end}}{{.name}}{{end}}']
              # values:
              #   clusterEnv: '{{ .metadata.labels.env }}'
      # selector:
      #   matchLabels:
      #     serviceType: autoDeployCoreService
  template:
    metadata:
      name: '{{ .appName }}-{{ .envName }}-{{ .nameName }}'
      labels:
        app: '{{ .appName }}'
        env: '{{ .envName }}'
        # env: "{{range .envList }}{{.env }}{{end}}"
        version: '{{ .chartVersion }}'
        path: '{{ .path.basename }}'
        serviceType: '{{ .serviceType }}'
    spec:
      project: default
      destination:
        server: '{{ .serverName }}'
        namespace: '{{ .namespace }}'
      source:
        helm:
          releaseName: '{{ .appName }}'
          valueFiles: # Optional cluster values file and env values file
            - '/values/{{ .appName }}/cluster/values-{{ .nameName }}.yaml'
            - '/values/{{ .appName }}/env/values-{{ .envName }}.yaml'
          ignoreMissingValueFiles: true
        path: '{{ .path.path }}/version-{{ .chartVersion }}'
        repoURL: https://github.com/vette1861/helm-appsets.git
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - ApplyOutOfSyncOnly=true