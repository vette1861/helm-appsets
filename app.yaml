# This applicationset will create an application for every chart in charts/* with values in values/*
# Each chart can set defaults to apply to all env clusters
# Each chart can set overrides to apply to specific env clusters
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: helm-poc-appset
  namespace: argocd
  annotations:
    argocd.argoproj.io/manifest-generate-paths: .. # Ensures charts path and values path is available for templating
spec:
  goTemplate: true
  generators:
    - merge:
        mergeKeys:
          - env
          - name
          - chartName
          - app
        generators:
          # Gets each chart in charts/ and matches service defaults to cluster
          - matrix:
              generators:
                - git:
                    repoURL: https://github.com/vette1861/helm-appsets.git
                    revision: HEAD
                    files:
                    - path: "charts/**/defaults.yaml"
                - clusters:
                    selector:
                      matchLabels:
                        env: '{{list.env}}.{{.metadata.labels.env}}'
                    values:
                      app: '{{ .app }}'
                      basename: '{{ .path.basename }}'
          - matrix:
              generators:
                - git:
                    repoURL: https://github.com/vette1861/helm-appsets.git
                    revision: HEAD
                    files:
                    - path: "charts/**/overrides.yaml"
                - clusters:
                    selector:
                      matchLabels:
                        env: '{{ list.env }}'
                    values:
                      app: '{{ .app }}'
                      basename: '{{ .path.basename }}'
      selector:
        matchLabels:
          serviceType: core
  template:
    metadata:
      name: '{{ .app }}-{{ .env }}-{{ .name }}'
      labels:
        app: '{{ .app }}'
        env: '{{ .env }}'
        version: '{{ .list.chartVersion }}'
        path: '{{ .path.basename }}'
        serviceType: '{{ serviceType }}'
    spec:
      project: default
      destination:
        server: '{{ .server }}'
        namespace: '{{ .namespace }}'
      source:
        helm:
          releaseName: '{{ .app }}'
          valueFiles: # Optional cluster values file and env values file
            - '/values/{{ .app }}/cluster/values-{{ .name }}.yaml'
            - '/values/{{ .app }}/env/values-{{ .list.env }}.yaml'
          ignoreMissingValueFiles: true
        path: '/{{ .path.path }}/version-{{ .list.chartVersion }}'
        repoURL: https://github.com/vette1861/helm-appsets.git
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - ApplyOutOfSyncOnly=true