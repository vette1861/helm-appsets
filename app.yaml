# This applicationset will create an application for every chart in charts/* with values in values/*
# Each chart can set defaults to apply to all env clusters
# Each chart can set overrides to apply to specific env clusters
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: helm-poc-appset
  namespace: argocd
  annotations:
    argocd.argoproj.io/manifest-generate-paths: .. # Ensures charts path and values path is available for templating
spec:
  generators:
    - merge:
        mergeKeys: # Combined keys must be unique
          - appEnv
          - name
          - appName
          - server
          # - clusterName
        generators:
          - clusters:
              selector:
                matchLabels:
                  env: '{{ env }}'
                matchExpressions:
                  - {key: env, operator: Exists} 
          - matrix:
              generators:
                - git:
                    repoURL: https://github.com/vette1861/helm-appsets.git
                    revision: HEAD
                    files:
                    - path: charts/**/defaults.yaml # Check all chart dirs for overrides.yaml
                - list:
                    elements:
                    - appName: '{{ app }}'
                      chartVersion: '{{ chart.version }}'
                      chartPath: '{{ path }}/version-{{ chart.version }}'
                      chartPathValues: '/{{ path[0] }}/values'
                      chartName: '{{ chart.name }}'
                      appNamespace: '{{ namespace }}'
                      appEnv: '{{ env }}'
          - matrix:
              generators:
                - git:
                    repoURL: https://github.com/vette1861/helm-appsets.git
                    revision: HEAD
                    files:
                    - path: charts/**/overrides.yaml # Check all chart dirs for overrides.yaml
                - list:
                    elements:
                    - appName: '{{ app }}'
                      chartVersion: '{{ chart.version }}'
                      chartPath: '{{ path }}/version-{{ chart.version }}'
                      chartPathValues: '/{{ path[0] }}/values'
                      chartName: '{{ chart.name }}'
                      appNamespace: '{{ namespace }}'
                      appEnv: '{{ env }}'
          # - matrix:
          #     generators:
          #       - git:
          #           repoURL: https://github.com/vette1861/helm-appsets.git
          #           revision: HEAD
          #           files:
          #           - path: charts/**/overrides.yaml # Check all chart dirs for overrides.yaml
          #       - clusters:
          #           selector:
          #             matchExpressions:
          #               - {key: env, operator: Exists} # Ensure cluster secret is labeled with env
          #           values:
          #             name: '{{ clusterName }}'
          #             env: '{{ metadata.labels.env }}'
          #             app: '{{ app }}'
          #             chart.path: '{{ path }}/version-{{ chart.version }}' # Use version specific Chart.yaml 
          # - matrix:
          #     generators:
          #       - git:
          #           repoURL: https://github.com/vette1861/helm-appsets.git
          #           revision: HEAD
          #           files:
          #           - path: charts/**/overrides.yaml # Check all chart dirs for overrides.yaml
          #       - clusters:
          #           selector:
          #             matchLabels: 
          #               env: '{{ env }}' # Only override app if app + env are in overrides.yaml
          #             matchExpressions:
          #               - {key: env, operator: Exists} # Ensure cluster secret is labeled with env
          #           values:
          #             env: '{{ metadata.labels.env }}'
          #             name: '{{ clusterName }}'
          #             app: '{{ app }}'
          #             chart.path: '{{ path }}/version-{{ chart.version }}' # Use version specific Chart.yaml 
  template:
    metadata:
      name: "{{ appName }}-{{ name }}-{{ appEnv }}-{{ chartVersion }}"
      labels:
        app: "{{ appName }}"
        env: "{{ appEnv }}"
        version: "{{ chartVersion }}"
    spec:
      project: default
      destination:
        server: '{{ server }}'
        namespace: '{{ appNamespace }}'
      source:
        helm:
          releaseName: '{{ chartName }}'
          valueFiles: # Optional cluster values file and env values file
            - '{{ chartPathValues }}/{{ appName }}/cluster/values-{{ name }}.yaml'
            - '{{ chartPathValues }}/{{ appName }}/env/values-{{ appEnv }}.yaml'
          ignoreMissingValueFiles: true
        path: '{{ chartPath }}'
        repoURL: https://github.com/vette1861/helm-appsets.git
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - ApplyOutOfSyncOnly=true
