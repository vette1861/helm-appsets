# This applicationset will create an application for every chart in charts/* with values in values/*
# Each chart can set defaults to apply to all env clusters
# Each chart can set overrides to apply to specific env clusters
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: helm-poc-appset
  namespace: argocd
  annotations:
    argocd.argoproj.io/manifest-generate-paths: .. # Ensures charts path and values path is available for templating
spec:
  goTemplate: true
  generators:
    - merge:
        mergeKeys:
          - env
          - name
          - chartName
          - app
          # - chart["version"]
        generators:
        # Gets each chart in charts/ and matches service defaults to cluster
          - matrix:
              generators:
                - git:
                    repoURL: https://github.com/vette1861/helm-appsets.git
                    revision: HEAD
                    files:
                    - path: "charts/**/defaults.yaml"
                - clusters:
                    selector:
                      matchLabels:
                        env: '{{ .env }}'
                    values:
                      # chartName: '{{ .chart.name }}'
                      app: '{{ .app }}'
          - matrix:
              generators:
                - git:
                    repoURL: https://github.com/vette1861/helm-appsets.git
                    revision: HEAD
                    files:
                    - path: "charts/**/overrides.yaml"
                - clusters:
                    selector:
                      matchLabels:
                        env: '{{ .env }}'
                    # values:
                      # chartName: '{{ .chart.name }}'
            # - matrix:
            #     generators:
            #       - clusters: {}
            #       - list:
            #           elements:
            #             - env: '{{ .env }}'
      # Limit service applications per env/cluster ( auto.deploy ) 
      # Limit service applications per folder ( path.basename ) list
      # selector:
      #   matchLabels:
      #     '{{ .autoDeploy }}': "true"
      #     "{{'{{.values.auto.deploy}}'}}": "true" # To prevent ArgoCD from generating an application for a specific env/cluster
        # matchExpressions:
        #   - key: path
        #     operator: In
        #     values: # List of core service folders to ignore
        #       - metrics-server
  template:
    metadata:
      name: '{{ .app }}-{{ .env }}'
      labels:
        # app: '{{ .app }}'
        env: '{{ .env }}'
        # test: '{{ .values.autoDeploy }}'
        # # path: '{{ .path }}'
        # path: '{{ .basename }}'
        version: '{{ .chart.version }}'
        # defaultTest: '{{ .values.defaultName }}'
        # defaultTest: 'default-{{ default "hello" .chart.default}}'
        # deploy: '{{ .auto.deploy }}'
    spec:
      project: default
      destination:
        server: '{{ .server }}'
        namespace: '{{ .namespace }}'
      source:
        helm:
          releaseName: '{{ .app }}'
          valueFiles: # Optional cluster values file and env values file
            - '/values/{{ .app }}/cluster/values-{{ .name }}.yaml'
            - '/values/{{ .app }}/env/values-{{ .env }}.yaml'
          ignoreMissingValueFiles: true
        path: '{{ .path.path }}/version-{{ .chart.version }}'
        repoURL: https://github.com/vette1861/helm-appsets.git
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - ApplyOutOfSyncOnly=true